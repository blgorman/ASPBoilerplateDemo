diff --git a/src/MGS.BoilerplateDemo.Core/Localization/SourceFiles/BoilerplateDemo.xml b/src/MGS.BoilerplateDemo.Core/Localization/SourceFiles/BoilerplateDemo.xml
index 985d107..ed8567c 100644
--- a/src/MGS.BoilerplateDemo.Core/Localization/SourceFiles/BoilerplateDemo.xml
+++ b/src/MGS.BoilerplateDemo.Core/Localization/SourceFiles/BoilerplateDemo.xml
@@ -98,7 +98,6 @@
     
     <!-- Permissions -->
     <text name="Pages">Base Level Pages</text>
-    <text name="Administration">Administration</text>
     <!-- Option Lists-->
     <text name="OptionListsAll">Global Lists</text>
     <text name="OptionListsCreateAll">Create Global List</text>
diff --git a/src/MGS.BoilerplateDemo.EntityFrameworkCore/EntityFrameworkCore/Seed/Host/DefaultListAndListItemsCreator.cs b/src/MGS.BoilerplateDemo.EntityFrameworkCore/EntityFrameworkCore/Seed/Host/DefaultListAndListItemsCreator.cs
new file mode 100644
index 0000000..b90db59
--- /dev/null
+++ b/src/MGS.BoilerplateDemo.EntityFrameworkCore/EntityFrameworkCore/Seed/Host/DefaultListAndListItemsCreator.cs
@@ -0,0 +1,94 @@
+﻿using MGS.BoilerplateDemo.BoilerplateDemo.OptionListsAndListItems;
+using Microsoft.EntityFrameworkCore;
+using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+
+namespace MGS.BoilerplateDemo.EntityFrameworkCore.Seed.Host
+{
+    public class DefaultListAndListItemsCreator
+    {
+        private readonly BoilerplateDemoDbContext _context;
+
+        public DefaultListAndListItemsCreator(BoilerplateDemoDbContext context)
+        {
+            _context = context;
+        }
+
+        public void Create()
+        {
+            var QuestionList = _context.OptionLists.FirstOrDefault(x => x.OptionListKey.Equals("QuestionTypes", StringComparison.CurrentCultureIgnoreCase));
+            if (QuestionList == null)
+            {
+                CreateList("States", "States", "A list of US States");
+            }
+        }
+
+        private void CreateList(string key, string displayName, string description)
+        {
+            var ol = new OptionList()
+            {
+                DisplayName = displayName,
+                Description = description,
+                IsActive = true,
+                IsDeleted = false,
+                TenantId = null,
+                OptionListKey = key
+            };
+
+            _context.OptionLists.Add(ol);
+            _context.SaveChanges();
+
+            var theList = _context.OptionLists.Include(x => x.OptionListItems).FirstOrDefault(y => y.OptionListKey.Equals(key, StringComparison.CurrentCultureIgnoreCase));
+            if (theList != null)
+            {
+                var modified = false;
+                if (theList.OptionListItems.FirstOrDefault(x => x.DisplayText.Equals("Alabama", StringComparison.CurrentCultureIgnoreCase)) == null)
+                {
+                    CreateListItem(theList.Id, "Alabama", "AL", 1);
+                    modified = true;
+                }
+                if (theList.OptionListItems.FirstOrDefault(x => x.DisplayText.Equals("Alaska", StringComparison.CurrentCultureIgnoreCase)) == null)
+                {
+                    CreateListItem(theList.Id, "Alaska", "AK", 2);
+                    modified = true;
+                }
+                if (theList.OptionListItems.FirstOrDefault(x => x.DisplayText.Equals("Arizona", StringComparison.CurrentCultureIgnoreCase)) == null)
+                {
+                    CreateListItem(theList.Id, "Arizona", "AZ", 3);
+                    modified = true;
+                }
+                if (theList.OptionListItems.FirstOrDefault(x => x.DisplayText.Equals("Arkansas", StringComparison.CurrentCultureIgnoreCase)) == null)
+                {
+                    CreateListItem(theList.Id, "Arkansas", "AR", 4);
+                    modified = true;
+                }
+                if (theList.OptionListItems.FirstOrDefault(x => x.DisplayText.Equals("California", StringComparison.CurrentCultureIgnoreCase)) == null)
+                {
+                    CreateListItem(theList.Id, "California", "CA", 5);
+                    modified = true;
+                }
+                // TODO: add the rest of the states..
+
+                if (modified) _context.SaveChanges();
+            }
+        }
+
+        private void CreateListItem(int listId, string displayText, string additionalInfo, int displayOrder)
+        {
+            var oli = new OptionListItem()
+            {
+                AdditionalInfo = additionalInfo,
+                DisplayOrder = displayOrder,
+                DisplayText = displayText,
+                IsActive = true,
+                IsDeleted = false,
+                OptionListId = listId
+            };
+
+            _context.OptionListItems.Add(oli);
+        }
+    }
+}
diff --git a/src/MGS.BoilerplateDemo.EntityFrameworkCore/EntityFrameworkCore/Seed/Host/InitialListAndListItemsDbBuilder.cs b/src/MGS.BoilerplateDemo.EntityFrameworkCore/EntityFrameworkCore/Seed/Host/InitialListAndListItemsDbBuilder.cs
new file mode 100644
index 0000000..4a4c63c
--- /dev/null
+++ b/src/MGS.BoilerplateDemo.EntityFrameworkCore/EntityFrameworkCore/Seed/Host/InitialListAndListItemsDbBuilder.cs
@@ -0,0 +1,23 @@
+﻿using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+
+namespace MGS.BoilerplateDemo.EntityFrameworkCore.Seed.Host
+{
+    public class InitialListAndListItemsDbBuilder
+    {
+        private readonly BoilerplateDemoDbContext _context;
+
+        public InitialListAndListItemsDbBuilder(BoilerplateDemoDbContext context)
+        {
+            _context = context;
+        }
+
+        public void Create()
+        {
+            new DefaultListAndListItemsCreator(_context).Create();
+        }
+    }
+}
diff --git a/src/MGS.BoilerplateDemo.EntityFrameworkCore/EntityFrameworkCore/Seed/SeedHelper.cs b/src/MGS.BoilerplateDemo.EntityFrameworkCore/EntityFrameworkCore/Seed/SeedHelper.cs
index 1ea2972..1913a49 100644
--- a/src/MGS.BoilerplateDemo.EntityFrameworkCore/EntityFrameworkCore/Seed/SeedHelper.cs
+++ b/src/MGS.BoilerplateDemo.EntityFrameworkCore/EntityFrameworkCore/Seed/SeedHelper.cs
@@ -24,6 +24,9 @@ namespace MGS.BoilerplateDemo.EntityFrameworkCore.Seed
             // Host seed
             new InitialHostDbBuilder(context).Create();
 
+            // List and List Items Seed
+            new InitialListAndListItemsDbBuilder(context).Create();
+
             // Default tenant seed (in host database).
             new DefaultTenantBuilder(context).Create();
             new TenantRoleAndUserBuilder(context, 1).Create();
