diff --git a/src/MGS.BoilerplateDemo.Application/BoilerplateDemo/OptionListAndListItems/OptionListAppService.cs b/src/MGS.BoilerplateDemo.Application/BoilerplateDemo/OptionListAndListItems/OptionListAppService.cs
index 6d433ce..dc45c2f 100644
--- a/src/MGS.BoilerplateDemo.Application/BoilerplateDemo/OptionListAndListItems/OptionListAppService.cs
+++ b/src/MGS.BoilerplateDemo.Application/BoilerplateDemo/OptionListAndListItems/OptionListAppService.cs
@@ -10,9 +10,12 @@ using Abp.Domain.Uow;
 using Abp.Application.Services;
 using MGS.BoilerplateDemo.BoilerplateDemo.OptionListsAndListItems;
 using MGS.BoilerplateDemo.BoilerplateDemo.OptionListAndListItems.Dtos;
+using Abp.Authorization;
+using MGS.BoilerplateDemo.Authorization;
 
 namespace MGS.BoilerplateDemo.BoilerplateDemo.OptionListAndListItems
 {
+    [AbpAuthorize(PermissionNames.Pages_OptionLists, PermissionNames.Pages_Tenants_OptionLists)]
     public class OptionListAppService : AsyncCrudAppService<OptionList, OptionListViewDto, int, GetOptionListDto, OptionListCreateOrEditDto, OptionListCreateOrEditDto>, IOptionListAppService
     {
         private IRepository<OptionList> _optionListRepository;
@@ -103,6 +106,8 @@ namespace MGS.BoilerplateDemo.BoilerplateDemo.OptionListAndListItems
         /// </summary>
         /// <param name="input"></param>
         /// <returns></returns>
+        [AbpAuthorize(PermissionNames.Pages_OptionLists_Create, PermissionNames.Pages_Tenants_OptionLists_Create
+                        , PermissionNames.Pages_OptionLists_Update, PermissionNames.Pages_Tenants_OptionListItems_Update)]
         public async Task CreateOrUpdateList(OptionListCreateOrEditDto input)
         {
             if (input.Id <= 0)
@@ -120,6 +125,7 @@ namespace MGS.BoilerplateDemo.BoilerplateDemo.OptionListAndListItems
         /// </summary>
         /// <param name="input"></param>
         /// <returns></returns>
+        [AbpAuthorize(PermissionNames.Pages_OptionLists_Create, PermissionNames.Pages_Tenants_OptionLists_Create)]
         private async Task CreateList(OptionListCreateOrEditDto input)
         {
             var entry = ObjectMapper.Map<OptionList>(input);
@@ -136,6 +142,7 @@ namespace MGS.BoilerplateDemo.BoilerplateDemo.OptionListAndListItems
         /// </summary>
         /// <param name="input"></param>
         /// <returns></returns>
+        [AbpAuthorize(PermissionNames.Pages_OptionLists_Update, PermissionNames.Pages_Tenants_OptionListItems_Update)]
         private async Task UpdateList(OptionListCreateOrEditDto input)
         {
             using (UnitOfWorkManager.Current.DisableFilter(AbpDataFilters.MayHaveTenant, AbpDataFilters.MustHaveTenant))
@@ -155,6 +162,7 @@ namespace MGS.BoilerplateDemo.BoilerplateDemo.OptionListAndListItems
         /// </summary>
         /// <param name="input"></param>
         /// <returns></returns>
+        [AbpAuthorize(PermissionNames.Pages_OptionLists_Delete, PermissionNames.Pages_Tenants_OptionLists_Delete)]
         public async Task DeleteListByEntity(EntityDto input)
         {
             using (UnitOfWorkManager.Current.DisableFilter(AbpDataFilters.MayHaveTenant, AbpDataFilters.MustHaveTenant))
@@ -168,6 +176,7 @@ namespace MGS.BoilerplateDemo.BoilerplateDemo.OptionListAndListItems
         /// </summary>
         /// <param name="id"></param>
         /// <returns></returns>
+        [AbpAuthorize(PermissionNames.Pages_OptionLists_Delete, PermissionNames.Pages_Tenants_OptionLists_Delete)]
         public async Task DeleteList(int id)
         {
             using (UnitOfWorkManager.Current.DisableFilter(AbpDataFilters.MayHaveTenant, AbpDataFilters.MustHaveTenant))
@@ -176,6 +185,7 @@ namespace MGS.BoilerplateDemo.BoilerplateDemo.OptionListAndListItems
             }
         }
 
+        [AbpAuthorize(PermissionNames.Pages_OptionLists_Delete, PermissionNames.Pages_Tenants_OptionLists_Delete)]
         public async Task DeleteListItemsByList(string key)
         {
             using (UnitOfWorkManager.Current.DisableFilter(AbpDataFilters.MayHaveTenant, AbpDataFilters.MustHaveTenant))
diff --git a/src/MGS.BoilerplateDemo.Application/BoilerplateDemo/OptionListAndListItems/OptionListItemsAppService.cs b/src/MGS.BoilerplateDemo.Application/BoilerplateDemo/OptionListAndListItems/OptionListItemsAppService.cs
index 7500f31..10e16ab 100644
--- a/src/MGS.BoilerplateDemo.Application/BoilerplateDemo/OptionListAndListItems/OptionListItemsAppService.cs
+++ b/src/MGS.BoilerplateDemo.Application/BoilerplateDemo/OptionListAndListItems/OptionListItemsAppService.cs
@@ -11,9 +11,12 @@ using System.Linq;
 using Abp.Application.Services;
 using MGS.BoilerplateDemo.BoilerplateDemo.OptionListsAndListItems;
 using MGS.BoilerplateDemo.BoilerplateDemo.OptionListAndListItems.Dtos;
+using Abp.Authorization;
+using MGS.BoilerplateDemo.Authorization;
 
 namespace MGS.BoilerplateDemo.BoilerplateDemo.OptionListAndListItems
 {
+    [AbpAuthorize(PermissionNames.Pages_OptionListItems, PermissionNames.Pages_Tenants_OptionListItems)]
     public class OptionListItemsAppService : AsyncCrudAppService<OptionListItem, OptionListItemViewDto, int, GetOptionListItemDto, OptionListItemCreateOrEditDto, OptionListItemCreateOrEditDto>, IOptionListItemsAppService
     {
         private IOptionListAppService _optionListAppService;
@@ -100,6 +103,8 @@ namespace MGS.BoilerplateDemo.BoilerplateDemo.OptionListAndListItems
             }
         }
 
+        [AbpAuthorize(PermissionNames.Pages_OptionListItems_Create, PermissionNames.Pages_Tenants_OptionListItems_Create,
+                        PermissionNames.Pages_OptionListItems_Update, PermissionNames.Pages_Tenants_OptionListItems_Update)]
         public async Task CreateOrUpdateListItem(OptionListItemCreateOrEditDto input)
         {
             if (input.Id <= 0)
@@ -112,6 +117,7 @@ namespace MGS.BoilerplateDemo.BoilerplateDemo.OptionListAndListItems
             }
         }
 
+        [AbpAuthorize(PermissionNames.Pages_OptionListItems_Create, PermissionNames.Pages_Tenants_OptionListItems_Create)]
         private async Task CreateListItem(OptionListItemCreateOrEditDto input)
         {
             using (UnitOfWorkManager.Current.DisableFilter(AbpDataFilters.MayHaveTenant, AbpDataFilters.MustHaveTenant))
@@ -138,6 +144,7 @@ namespace MGS.BoilerplateDemo.BoilerplateDemo.OptionListAndListItems
             }
         }
 
+        [AbpAuthorize(PermissionNames.Pages_OptionListItems_Update, PermissionNames.Pages_Tenants_OptionListItems_Update)]
         private async Task UpdateListItem(OptionListItemCreateOrEditDto input)
         {
             using (UnitOfWorkManager.Current.DisableFilter(AbpDataFilters.MayHaveTenant, AbpDataFilters.MustHaveTenant))
@@ -150,6 +157,7 @@ namespace MGS.BoilerplateDemo.BoilerplateDemo.OptionListAndListItems
             }
         }
 
+        [AbpAuthorize(PermissionNames.Pages_OptionListItems_Delete, PermissionNames.Pages_Tenants_OptionListItems_Delete)]
         public async Task DeleteAllListItemsByListKey(string key)
         {
             using (UnitOfWorkManager.Current.DisableFilter(AbpDataFilters.MayHaveTenant, AbpDataFilters.MustHaveTenant))
@@ -158,6 +166,7 @@ namespace MGS.BoilerplateDemo.BoilerplateDemo.OptionListAndListItems
             }
         }
 
+        [AbpAuthorize(PermissionNames.Pages_OptionListItems_Delete, PermissionNames.Pages_Tenants_OptionListItems_Delete)]
         public async Task DeleteListItemByEntity(EntityDto input)
         {
             using (UnitOfWorkManager.Current.DisableFilter(AbpDataFilters.MayHaveTenant, AbpDataFilters.MustHaveTenant))
@@ -166,6 +175,7 @@ namespace MGS.BoilerplateDemo.BoilerplateDemo.OptionListAndListItems
             }
         }
 
+        [AbpAuthorize(PermissionNames.Pages_OptionListItems_Delete, PermissionNames.Pages_Tenants_OptionListItems_Delete)]
         public async Task DeleteListItem(int id)
         {
             using (UnitOfWorkManager.Current.DisableFilter(AbpDataFilters.MayHaveTenant, AbpDataFilters.MustHaveTenant))
@@ -173,6 +183,5 @@ namespace MGS.BoilerplateDemo.BoilerplateDemo.OptionListAndListItems
                 await _optionListItemRepository.DeleteAsync(x => x.Id == id);
             }
         }
-
     }
 }
diff --git a/src/MGS.BoilerplateDemo.Core/Authorization/BoilerplateDemoAuthorizationProvider.cs b/src/MGS.BoilerplateDemo.Core/Authorization/BoilerplateDemoAuthorizationProvider.cs
index 225755d..9f706b5 100644
--- a/src/MGS.BoilerplateDemo.Core/Authorization/BoilerplateDemoAuthorizationProvider.cs
+++ b/src/MGS.BoilerplateDemo.Core/Authorization/BoilerplateDemoAuthorizationProvider.cs
@@ -8,9 +8,34 @@ namespace MGS.BoilerplateDemo.Authorization
     {
         public override void SetPermissions(IPermissionDefinitionContext context)
         {
+            var pages = context.GetPermissionOrNull(PermissionNames.Pages) ?? context.CreatePermission(PermissionNames.Pages, L("Pages"));
+            var administration = context.GetPermissionOrNull(PermissionNames.Administration) ?? context.CreatePermission(PermissionNames.Administration, L("Administration"), multiTenancySides: MultiTenancySides.Host);
+            var administrationOnTenant = context.GetPermissionOrNull(PermissionNames.AdministrationOnTenant) ?? context.CreatePermission(PermissionNames.AdministrationOnTenant, L("Administration"), multiTenancySides: MultiTenancySides.Tenant);
+
             context.CreatePermission(PermissionNames.Pages_Users, L("Users"));
             context.CreatePermission(PermissionNames.Pages_Roles, L("Roles"));
             context.CreatePermission(PermissionNames.Pages_Tenants, L("Tenants"), multiTenancySides: MultiTenancySides.Host);
+
+            var hostOptionLists = pages.CreateChildPermission(PermissionNames.Pages_Tenants_OptionLists, L("OptionListsAll"), multiTenancySides: MultiTenancySides.Host);
+            hostOptionLists.CreateChildPermission(PermissionNames.Pages_Tenants_OptionLists_Create, L("OptionListsCreateAll"), multiTenancySides: MultiTenancySides.Host);
+            hostOptionLists.CreateChildPermission(PermissionNames.Pages_Tenants_OptionLists_Update, L("OptionListsUpdateAll"), multiTenancySides: MultiTenancySides.Host);
+            hostOptionLists.CreateChildPermission(PermissionNames.Pages_Tenants_OptionLists_Delete, L("OptionListsDeleteAll"), multiTenancySides: MultiTenancySides.Host);
+
+            var hostOptionListItems = pages.CreateChildPermission(PermissionNames.Pages_Tenants_OptionListItems, L("OptionListItemsAll"), multiTenancySides: MultiTenancySides.Host);
+            hostOptionListItems.CreateChildPermission(PermissionNames.Pages_Tenants_OptionListItems_Create, L("OptionListItemsCreateAll"), multiTenancySides: MultiTenancySides.Host);
+            hostOptionListItems.CreateChildPermission(PermissionNames.Pages_Tenants_OptionListItems_Update, L("OptionListItemsUpdateAll"), multiTenancySides: MultiTenancySides.Host);
+            hostOptionListItems.CreateChildPermission(PermissionNames.Pages_Tenants_OptionListItems_Delete, L("OptionListItemsDeleteAll"), multiTenancySides: MultiTenancySides.Host);
+
+            var tenantOptionLists = pages.CreateChildPermission(PermissionNames.Pages_OptionLists, L("OptionLists"), multiTenancySides: MultiTenancySides.Tenant);
+            tenantOptionLists.CreateChildPermission(PermissionNames.Pages_OptionLists_Create, L("OptionListsCreate"), multiTenancySides: MultiTenancySides.Tenant);
+            tenantOptionLists.CreateChildPermission(PermissionNames.Pages_OptionLists_Update, L("OptionListsUpdate"), multiTenancySides: MultiTenancySides.Tenant);
+            tenantOptionLists.CreateChildPermission(PermissionNames.Pages_OptionLists_Delete, L("OptionListsDelete"), multiTenancySides: MultiTenancySides.Tenant);
+
+            var tenantOptionListItems = pages.CreateChildPermission(PermissionNames.Pages_OptionListItems, L("OptionListItems"), multiTenancySides: MultiTenancySides.Tenant);
+            tenantOptionListItems.CreateChildPermission(PermissionNames.Pages_OptionListItems_Create, L("OptionListItemsCreate"), multiTenancySides: MultiTenancySides.Tenant);
+            tenantOptionListItems.CreateChildPermission(PermissionNames.Pages_OptionListItems_Update, L("OptionListItemsUpdate"), multiTenancySides: MultiTenancySides.Tenant);
+            tenantOptionListItems.CreateChildPermission(PermissionNames.Pages_OptionListItems_Delete, L("OptionListItemsDelete"), multiTenancySides: MultiTenancySides.Tenant);
+
         }
 
         private static ILocalizableString L(string name)
diff --git a/src/MGS.BoilerplateDemo.Core/Authorization/PermissionNames.cs b/src/MGS.BoilerplateDemo.Core/Authorization/PermissionNames.cs
index b66cf7d..ce2f906 100644
--- a/src/MGS.BoilerplateDemo.Core/Authorization/PermissionNames.cs
+++ b/src/MGS.BoilerplateDemo.Core/Authorization/PermissionNames.cs
@@ -2,10 +2,38 @@
 {
     public static class PermissionNames
     {
+        public const string Pages = "Pages";
+        public const string Administration = "Administration";
+        public const string AdministrationOnTenant = "AdministrationOnTenant";
+
         public const string Pages_Tenants = "Pages.Tenants";
 
         public const string Pages_Users = "Pages.Users";
 
         public const string Pages_Roles = "Pages.Roles";
+
+        //OptionLists -> Tenants
+        public const string Pages_Tenants_OptionLists = "Pages.Tenants.OptionLists";
+        public const string Pages_Tenants_OptionLists_Create = "Pages.Tenants.OptionLists.Create";
+        public const string Pages_Tenants_OptionLists_Update = "Pages.Tenants.OptionLists.Update";
+        public const string Pages_Tenants_OptionLists_Delete = "Pages.Tenants.OptionLists.Delete";
+
+        //OptionLists
+        public const string Pages_OptionLists = "Pages.OptionLists";
+        public const string Pages_OptionLists_Create = "Pages.OptionLists.Create";
+        public const string Pages_OptionLists_Update = "Pages.OptionLists.Update";
+        public const string Pages_OptionLists_Delete = "Pages.OptionLists.Delete";
+
+        //OptionListItems -> Tenants
+        public const string Pages_Tenants_OptionListItems = "Pages.Tenants.OptionListItems";
+        public const string Pages_Tenants_OptionListItems_Create = "Pages.Tenants.OptionListItems.Create";
+        public const string Pages_Tenants_OptionListItems_Update = "Pages.Tenants.OptionListItems.Update";
+        public const string Pages_Tenants_OptionListItems_Delete = "Pages.Tenants.OptionListItems.Delete";
+
+        //OptionListItems
+        public const string Pages_OptionListItems = "Pages.OptionListItems";
+        public const string Pages_OptionListItems_Create = "Pages.OptionListItems.Create";
+        public const string Pages_OptionListItems_Update = "Pages.OptionListItems.Update";
+        public const string Pages_OptionListItems_Delete = "Pages.OptionListItems.Delete";
     }
 }
diff --git a/src/MGS.BoilerplateDemo.Core/Localization/SourceFiles/BoilerplateDemo.xml b/src/MGS.BoilerplateDemo.Core/Localization/SourceFiles/BoilerplateDemo.xml
index 508c7fa..985d107 100644
--- a/src/MGS.BoilerplateDemo.Core/Localization/SourceFiles/BoilerplateDemo.xml
+++ b/src/MGS.BoilerplateDemo.Core/Localization/SourceFiles/BoilerplateDemo.xml
@@ -95,5 +95,29 @@
     <text name="Skins">Skins</text>
     <text name="Settings">Settings</text>
     <text name="Filter">Filter</text>
+    
+    <!-- Permissions -->
+    <text name="Pages">Base Level Pages</text>
+    <text name="Administration">Administration</text>
+    <!-- Option Lists-->
+    <text name="OptionListsAll">Global Lists</text>
+    <text name="OptionListsCreateAll">Create Global List</text>
+    <text name="OptionListsUpdateAll">Update Global List</text>
+    <text name="OptionListsDeleteAll">Delete Global List</text>
+
+    <text name="OptionListItemsAll">Global List Items</text>
+    <text name="OptionListItemsCreateAll">Create Global List Items</text>
+    <text name="OptionListItemsUpdateAll">Update Global List Items</text>
+    <text name="OptionListItemsDeleteAll">Delete Global List Items</text>
+
+    <text name="OptionLists">Local Lists</text>
+    <text name="OptionListsCreate">Create Local List</text>
+    <text name="OptionListsUpdate">Update Local List</text>
+    <text name="OptionListsDelete">Delete Local List</text>
+
+    <text name="OptionListItems">Local List Items</text>
+    <text name="OptionListItemsCreate">Create Local List Item</text>
+    <text name="OptionListItemsUpdate">Update Local List Item</text>
+    <text name="OptionListItemsDelete">Delete Local List Item</text>
   </texts>
 </localizationDictionary>
